name: Deploy

on: 
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install deps
        run: npm i -g pnpm && pnpm install


      - name: Run test
        run: pnpm test

  migrate:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Env
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}" >> .env
          echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET }}" >> .env

      - name: Install deps
        run: npm i -g pnpm && pnpm install

      - name: Migrate
        run: pnpm prisma migrate deploy

      # - name: Run seeds
      #   run: pnpm seed
  
  deploy:
    needs: [migrate]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker-compose

            rm -rf ksnet-backend
            git clone https://github.com/idmaksim/ksnet-backend.git
            cd ksnet-backend

            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}" >> .env
            echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET }}" >> .env

            cat .env

            docker-compose down -v

            docker-compose up --build -d
  

  # build:
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Checkout code
  #       uses: actions/checkout@v4
        
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}


  #     - name: Build
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./Dockerfile.main
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/main:latest
  #         build-args: |
  #           DATABASE_URL=${{ secrets.DATABASE_URL }}
  #           ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}
  #           REFRESH_SECRET=${{ secrets.REFRESH_SECRET }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max


  # deploy:
  #   needs: [migrate]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USERNAME }}
  #         password: ${{ secrets.SERVER_PASSWORD }}
  #         script: |
  #           docker pull ${{ secrets.DOCKERHUB_USERNAME }}/main:latest

  #           docker stop main || true
  #           docker rm main || true

  #           docker run -d --name main \
  #             -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
  #             --restart unless-stopped \
  #             -e NODE_ENV=production \
  #             -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
  #             -e ACCESS_SECRET=${{ secrets.ACCESS_SECRET }} \
  #             -e REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
  #             -e PORT=${{ secrets.PORT }} \
  #             ${{ secrets.DOCKERHUB_USERNAME }}/main:latest


